          % processing: function definition: sum (func3)
func3     nop
          sw -8(r14),r15
          % processing: t0 := e1 + e2
          % processing: Loading instance address to r12
          lw r5,-12(r14)
          add r12,r0,r5
          lw r2,-8(r12)
          % processing: Loading instance address to r12
          lw r5,-12(r14)
          add r12,r0,r5
          lw r3,-12(r12)
          add r4,r2,r3
          sw -20(r14),r4
          % processing: Function call to ppp (func4)
          % processing: Setting instance address
          addi r2,r14,-12
          sw -44(r14),r2
          % processing: b = t0
          lw r2,-20(r14)
          sw -48(r14),r2
          % processing: Move stack frame pointer by: -32
          addi r14,r14,-32
          % processing: jump to: func4
          jl r15,func4
          % processing: Move back stack frame pointer by: -32
          subi r14,r14,-32
          % processing: t1 = return value
          lw r2,-36(r14)
          sw -24(r14),r2
          % processing: t :=  ppp
          lw r2,-24(r14)
          sw -16(r14),r2
          % processing: t2 := 10
          addi r2,r0,10
          sw -28(r14),r2
          % processing: e1 :=  t2
          lw r2,-28(r14)
          % processing: Loading instance address to r12
          lw r5,-12(r14)
          add r12,r0,r5
          sw -8(r12),r2
          % processing: t3 := e1 + e2
          % processing: Loading instance address to r12
          lw r5,-12(r14)
          add r12,r0,r5
          lw r2,-8(r12)
          % processing: Loading instance address to r12
          lw r5,-12(r14)
          add r12,r0,r5
          lw r3,-12(r12)
          add r4,r2,r3
          sw -32(r14),r4
          % processing: return value = t3
          lw r2,-32(r14)
          sw -4(r14),r2
          j endfunc3
endfunc3  nop
          lw r15,-8(r14)
          jr r15

          % processing: function definition: ppp (func4)
func4     nop
          sw -8(r14),r15
          % processing: write(b)
          lw r2,-16(r14)
          % processing: Put value on stack
          addi r14,r14,-16
          sw -8(r14),r2
          % processing: Put buffer address on the stack
          addi r2,r0,buf
          sw -12(r14),r2
          % processing: Convert int to string for output
          jl r15,intstr
          sw -8(r14),r13
          % processing: Output to console
          jl r15,putstr
          subi r14,r14,-16
          % processing: return value = b
          lw r2,-16(r14)
          sw -4(r14),r2
          j endfunc4
endfunc4  nop
          lw r15,-8(r14)
          jr r15

mainfunc  entry
          addi r14,r0,topaddr
          % processing: t0 := 1
          addi r2,r0,1
          sw -24(r14),r2
          % processing: e1 :=  t0
          lw r2,-24(r14)
          sw -8(r14),r2
          % processing: t1 := 4
          addi r2,r0,4
          sw -28(r14),r2
          % processing: e2 :=  t1
          lw r2,-28(r14)
          sw -12(r14),r2
          % processing: Function call to sum (func3)
          % processing: Setting instance address
          addi r2,r14,-16
          sw -44(r14),r2
          % processing: Move stack frame pointer by: -32
          addi r14,r14,-32
          % processing: jump to: func3
          jl r15,func3
          % processing: Move back stack frame pointer by: -32
          subi r14,r14,-32
          % processing: t2 = return value
          lw r2,-36(r14)
          sw -32(r14),r2
          % processing: b :=  sum
          lw r2,-32(r14)
          sw -20(r14),r2
          % processing: write(b)
          lw r2,-20(r14)
          % processing: Put value on stack
          addi r14,r14,-32
          sw -8(r14),r2
          % processing: Put buffer address on the stack
          addi r2,r0,buf
          sw -12(r14),r2
          % processing: Convert int to string for output
          jl r15,intstr
          sw -8(r14),r13
          % processing: Output to console
          jl r15,putstr
          subi r14,r14,-32
endmain   hlt
          % processing: buffer space used for console output
buf       res 20
