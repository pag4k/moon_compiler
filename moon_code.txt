mainfunc  entry
          addi r14,r0,topaddr
          % processing: t0 := 3
          addi r2,r0,3
          sw -4(r14),r2
          % processing: t1 := 0
          addi r2,r0,0
          sw -20(r14),r2
          % processing: t2 = array offset
          subi r2,r0,4
          lw r3,-20(r14)
          muli r4,r3,4
          sub r2,r2,r4
          sw -24(r14),r2
          % processing: t3 := 10
          addi r2,r0,10
          sw -28(r14),r2
          % processing: a := t3
          % processing: Array -> Switching to offset register.
          addi r2,r14,-16
          addi r2,r2,12
          lw r3,-24(r14)
          add r2,r2,r3
          lw r3,-28(r14)
          sw 0(r2),r3
          % processing: t4 := 1
          addi r2,r0,1
          sw -32(r14),r2
          % processing: t5 = array offset
          subi r2,r0,4
          lw r3,-32(r14)
          muli r4,r3,4
          sub r2,r2,r4
          sw -36(r14),r2
          % processing: t6 := 20
          addi r2,r0,20
          sw -40(r14),r2
          % processing: a := t6
          % processing: Array -> Switching to offset register.
          addi r2,r14,-16
          addi r2,r2,12
          lw r3,-36(r14)
          add r2,r2,r3
          lw r3,-40(r14)
          sw 0(r2),r3
          % processing: t7 := 2
          addi r2,r0,2
          sw -44(r14),r2
          % processing: t8 = array offset
          subi r2,r0,4
          lw r3,-44(r14)
          muli r4,r3,4
          sub r2,r2,r4
          sw -48(r14),r2
          % processing: t9 := 30
          addi r2,r0,30
          sw -52(r14),r2
          % processing: a := t9
          % processing: Array -> Switching to offset register.
          addi r2,r14,-16
          addi r2,r2,12
          lw r3,-48(r14)
          add r2,r2,r3
          lw r3,-52(r14)
          sw 0(r2),r3
          % processing: t10 := 3
          addi r2,r0,3
          sw -56(r14),r2
          % processing: b := a
          lw r2,-16(r14)
          sw -68(r14),r2
          lw r2,-12(r14)
          sw -64(r14),r2
          lw r2,-8(r14)
          sw -60(r14),r2
          % processing: t11 := 0
          addi r2,r0,0
          sw -72(r14),r2
          % processing: t12 = array offset
          subi r2,r0,4
          lw r3,-72(r14)
          muli r4,r3,4
          sub r2,r2,r4
          sw -76(r14),r2
          % processing: write(b)
          % processing: Array -> Switching to offset register.
          addi r3,r14,-68
          addi r3,r3,12
          lw r4,-76(r14)
          add r3,r3,r4
          lw r2,0(r3)
          addi r14,r14,-92
          % processing: Put value on stack
          sw -8(r14),r2
          % processing: Put buffer address on the stack
          addi r2,r0,buf
          sw -12(r14),r2
          % processing: Convert int to string for output
          jl r15,intstr
          sw -8(r14),r13
          % processing: Output to console
          jl r15,putstr
          subi r14,r14,-92
          % processing: t13 := 1
          addi r2,r0,1
          sw -80(r14),r2
          % processing: t14 = array offset
          subi r2,r0,4
          lw r3,-80(r14)
          muli r4,r3,4
          sub r2,r2,r4
          sw -84(r14),r2
          % processing: write(b)
          % processing: Array -> Switching to offset register.
          addi r3,r14,-68
          addi r3,r3,12
          lw r4,-84(r14)
          add r3,r3,r4
          lw r2,0(r3)
          addi r14,r14,-92
          % processing: Put value on stack
          sw -8(r14),r2
          % processing: Put buffer address on the stack
          addi r2,r0,buf
          sw -12(r14),r2
          % processing: Convert int to string for output
          jl r15,intstr
          sw -8(r14),r13
          % processing: Output to console
          jl r15,putstr
          subi r14,r14,-92
          % processing: t15 := 2
          addi r2,r0,2
          sw -88(r14),r2
          % processing: t16 = array offset
          subi r2,r0,4
          lw r3,-88(r14)
          muli r4,r3,4
          sub r2,r2,r4
          sw -92(r14),r2
          % processing: write(b)
          % processing: Array -> Switching to offset register.
          addi r3,r14,-68
          addi r3,r3,12
          lw r4,-92(r14)
          add r3,r3,r4
          lw r2,0(r3)
          addi r14,r14,-92
          % processing: Put value on stack
          sw -8(r14),r2
          % processing: Put buffer address on the stack
          addi r2,r0,buf
          sw -12(r14),r2
          % processing: Convert int to string for output
          jl r15,intstr
          sw -8(r14),r13
          % processing: Output to console
          jl r15,putstr
          subi r14,r14,-92
endmain   hlt
          % processing: buffer space used for console output
buf       res 20
