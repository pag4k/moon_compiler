          % processing: function definition: new (func1)
func1     nop
          sw -16(r14),r15
          % processing: x := x
          lw r2,-28(r14)
          sw -32(r14),r2
          % processing: y := y
          lw r2,-24(r14)
          sw -36(r14),r2
          % processing: z := z
          lw r2,-20(r14)
          sw -40(r14),r2
          % processing: return value = new
          lw r2,-40(r14)
          sw -12(r14),r2
          lw r2,-36(r14)
          sw -8(r14),r2
          lw r2,-32(r14)
          sw -4(r14),r2
          j endfunc1
endfunc1  nop
          lw r15,-16(r14)
          jr r15

          % processing: function definition: add (func2)
func2     nop
          sw -16(r14),r15
          % processing: t0 := x + x
          lw r2,-32(r14)
          lw r3,-20(r14)
          add r4,r2,r3
          sw -44(r14),r4
          % processing: x := t0
          lw r2,-44(r14)
          sw -32(r14),r2
          % processing: t1 := y + y
          lw r2,-36(r14)
          lw r3,-24(r14)
          add r4,r2,r3
          sw -48(r14),r4
          % processing: y := t1
          lw r2,-48(r14)
          sw -36(r14),r2
          % processing: t2 := z + z
          lw r2,-40(r14)
          lw r3,-28(r14)
          add r4,r2,r3
          sw -52(r14),r4
          % processing: z := t2
          lw r2,-52(r14)
          sw -40(r14),r2
          % processing: return value = a1
          lw r2,-40(r14)
          sw -12(r14),r2
          lw r2,-36(r14)
          sw -8(r14),r2
          lw r2,-32(r14)
          sw -4(r14),r2
          j endfunc2
endfunc2  nop
          lw r15,-16(r14)
          jr r15

mainfunc  entry
          addi r14,r0,topaddr
          % processing: t0 := 1
          addi r2,r0,1
          sw -16(r14),r2
          % processing: t1 := 2
          addi r2,r0,2
          sw -20(r14),r2
          % processing: t2 := 3
          addi r2,r0,3
          sw -24(r14),r2
          % processing: Function call to new (func1)
          % processing: z = t2
          lw r3,-24(r14)
          sw -104(r14),r3
          % processing: y = t1
          lw r3,-20(r14)
          sw -108(r14),r3
          % processing: x = t0
          lw r3,-16(r14)
          sw -112(r14),r3
          % processing: Move stack frame pointer by: -84
          addi r14,r14,-84
          % processing: jump to: func1
          jl r15,func1
          % processing: Move back stack frame pointer by: -84
          subi r14,r14,-84
          % processing: t3 = return value
          lw r3,-96(r14)
          sw -36(r14),r3
          lw r3,-92(r14)
          sw -32(r14),r3
          lw r3,-88(r14)
          sw -28(r14),r3
          % processing: a := new
          lw r2,-36(r14)
          sw -12(r14),r2
          lw r2,-32(r14)
          sw -8(r14),r2
          lw r2,-28(r14)
          sw -4(r14),r2
          % processing: t4 := 10
          addi r2,r0,10
          sw -52(r14),r2
          % processing: t5 := 20
          addi r2,r0,20
          sw -56(r14),r2
          % processing: t6 := 30
          addi r2,r0,30
          sw -60(r14),r2
          % processing: Function call to new (func1)
          % processing: z = t6
          lw r3,-60(r14)
          sw -104(r14),r3
          % processing: y = t5
          lw r3,-56(r14)
          sw -108(r14),r3
          % processing: x = t4
          lw r3,-52(r14)
          sw -112(r14),r3
          % processing: Move stack frame pointer by: -84
          addi r14,r14,-84
          % processing: jump to: func1
          jl r15,func1
          % processing: Move back stack frame pointer by: -84
          subi r14,r14,-84
          % processing: t7 = return value
          lw r3,-96(r14)
          sw -72(r14),r3
          lw r3,-92(r14)
          sw -68(r14),r3
          lw r3,-88(r14)
          sw -64(r14),r3
          % processing: b := new
          lw r2,-72(r14)
          sw -48(r14),r2
          lw r2,-68(r14)
          sw -44(r14),r2
          lw r2,-64(r14)
          sw -40(r14),r2
          % processing: Function call to add (func2)
          % processing: a2 = b
          lw r3,-48(r14)
          sw -112(r14),r3
          lw r3,-44(r14)
          sw -108(r14),r3
          lw r3,-40(r14)
          sw -104(r14),r3
          % processing: a1 = a
          lw r3,-12(r14)
          sw -124(r14),r3
          lw r3,-8(r14)
          sw -120(r14),r3
          lw r3,-4(r14)
          sw -116(r14),r3
          % processing: Move stack frame pointer by: -84
          addi r14,r14,-84
          % processing: jump to: func2
          jl r15,func2
          % processing: Move back stack frame pointer by: -84
          subi r14,r14,-84
          % processing: t8 = return value
          lw r3,-96(r14)
          sw -84(r14),r3
          lw r3,-92(r14)
          sw -80(r14),r3
          lw r3,-88(r14)
          sw -76(r14),r3
          % processing: a := add
          lw r2,-84(r14)
          sw -12(r14),r2
          lw r2,-80(r14)
          sw -8(r14),r2
          lw r2,-76(r14)
          sw -4(r14),r2
          % processing: write(x)
          lw r2,-4(r14)
          addi r14,r14,-84
          % processing: Put value on stack
          sw -8(r14),r2
          % processing: Put buffer address on the stack
          addi r2,r0,buf
          sw -12(r14),r2
          % processing: Convert int to string for output
          jl r15,intstr
          sw -8(r14),r13
          % processing: Output to console
          jl r15,putstr
          subi r14,r14,-84
          % processing: write(y)
          lw r2,-8(r14)
          addi r14,r14,-84
          % processing: Put value on stack
          sw -8(r14),r2
          % processing: Put buffer address on the stack
          addi r2,r0,buf
          sw -12(r14),r2
          % processing: Convert int to string for output
          jl r15,intstr
          sw -8(r14),r13
          % processing: Output to console
          jl r15,putstr
          subi r14,r14,-84
          % processing: write(z)
          lw r2,-12(r14)
          addi r14,r14,-84
          % processing: Put value on stack
          sw -8(r14),r2
          % processing: Put buffer address on the stack
          addi r2,r0,buf
          sw -12(r14),r2
          % processing: Convert int to string for output
          jl r15,intstr
          sw -8(r14),r13
          % processing: Output to console
          jl r15,putstr
          subi r14,r14,-84
endmain   hlt
          % processing: buffer space used for console output
buf       res 20
