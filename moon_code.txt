          % processing: function definition: getid (func2)
func2     nop
          sw -8(r14),r15
          % processing: return value = id
          % processing: Loading instance address to r12
          lw r3,-12(r14)
          add r12,r0,r3
          lw r2,-8(r12)
          sw -4(r14),r2
          j endfunc2
endfunc2  nop
          lw r15,-8(r14)
          jr r15

mainfunc  entry
          addi r14,r0,topaddr
          % processing: t0 := 4
          addi r2,r0,4
          sw -4(r14),r2
          % processing: t1 := 0
          addi r2,r0,0
          sw -88(r14),r2
          % processing: t2 = array offset
          subi r2,r0,20
          lw r3,-88(r14)
          muli r4,r3,20
          sub r2,r2,r4
          sw -92(r14),r2
          % processing: t3 := 9
          addi r2,r0,9
          sw -96(r14),r2
          % processing: id := t3
          % processing: Array -> Switching to offset register.
          addi r2,r14,-84
          addi r2,r2,80
          lw r3,-92(r14)
          add r2,r2,r3
          addi r2,r2,20
          addi r2,r2,-8
          lw r3,-96(r14)
          sw 0(r2),r3
          % processing: t4 := 3
          addi r2,r0,3
          sw -100(r14),r2
          % processing: t5 = array offset
          subi r2,r0,20
          lw r3,-100(r14)
          muli r4,r3,20
          sub r2,r2,r4
          sw -104(r14),r2
          % processing: write(id)
          % processing: Array -> Switching to offset register.
          addi r3,r14,-84
          addi r3,r3,80
          lw r4,-104(r14)
          add r3,r3,r4
          addi r3,r3,20
          addi r3,r3,-8
          lw r2,0(r3)
          addi r14,r14,-116
          % processing: Put value on stack
          sw -8(r14),r2
          % processing: Put buffer address on the stack
          addi r2,r0,buf
          sw -12(r14),r2
          % processing: Convert int to string for output
          jl r15,intstr
          sw -8(r14),r13
          % processing: Output to console
          jl r15,putstr
          subi r14,r14,-116
          % processing: t6 := 3
          addi r2,r0,3
          sw -108(r14),r2
          % processing: t7 = array offset
          subi r2,r0,20
          lw r3,-108(r14)
          muli r4,r3,20
          sub r2,r2,r4
          sw -112(r14),r2
          % processing: Function call to getid (func2)
          % processing: Setting instance address
          addi r2,r14,-4
          sw -128(r14),r2
          % processing: Move stack frame pointer by: -116
          addi r14,r14,-116
          % processing: jump to: func2
          jl r15,func2
          % processing: Move back stack frame pointer by: -116
          subi r14,r14,-116
          % processing: t8 = return value
          lw r3,-120(r14)
          sw -116(r14),r3
          % processing: write(getid)
          % processing: Array -> Switching to offset register.
          addi r3,r14,-84
          addi r3,r3,80
          lw r4,-112(r14)
          add r3,r3,r4
          addi r3,r3,20
          lw r2,-116(r14)
          addi r14,r14,-116
          % processing: Put value on stack
          sw -8(r14),r2
          % processing: Put buffer address on the stack
          addi r2,r0,buf
          sw -12(r14),r2
          % processing: Convert int to string for output
          jl r15,intstr
          sw -8(r14),r13
          % processing: Output to console
          jl r15,putstr
          subi r14,r14,-116
endmain   hlt
          % processing: buffer space used for console output
buf       res 20
